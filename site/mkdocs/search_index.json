{
    "docs": [
        {
            "location": "/", 
            "text": "CodeHilite\n\n\nCodeHilite\n is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.\n\n\n\n\nSyntax highlighting not working?\n\n\nPlease ensure that \nPygments\n is installed. See the next section for\nfurther directions on how to set up Pygments or use the official\n\nDocker image\n with all dependencies pre-installed.\n\n\n\n\nInstallation\n\n\nCodeHilite parses code blocks and wraps them in \npre\n tags. If \nPygments\n\nis installed, which is a generic syntax highlighter with support for over\n\n300 languages\n, CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:\n\n\npip install pygments\n\n\n\n\nTo enable CodeHilite, add the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite\n\n\n\n\n\n\n\nMigrating from Material 0.2.x\n\n\nIn 0.2.x the CodeHilite extension was included with\n\ncodehilite(css_class=code)\n which switched the CSS class from\n\n.codehilite\n to \n.code\n. The current version of the theme doesn't require\nthat and defines styles for the default \n.codehilite\n class, so the part\n\ncss_class=code\n needs to be removed.\n\n\n\n\nUsage\n\n\nSpecifying the language\n\n\nThe CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.\n\n\nvia Markdown syntax \nrecommended\n\n\nIn Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.\n\n\nExample:\n\n\n``` python\nimport tensorflow as tf\n```\n\n\n\n\nResult:\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\nvia Shebang\n\n\nAlternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.\n\n\nExample:\n\n\n    #!/usr/bin/python\n    import tensorflow as tf\n\n\n\n\nResult:\n\n\n#!/usr/bin/python\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\nvia three colons\n\n\nIf the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.\n\n\nExample:\n\n\n    :::python\n    import tensorflow as tf\n\n\n\n\nResult:\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n\nAdding line numbers\n\n\nLine numbers can be added by enabling the \nlinenums\n flag in your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(linenums=true)\n\n\n\n\n\nExample:\n\n\n``` python\n\n Bubble sort \n\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] \n items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n Bubble sort \n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n            \nif\n \nitems\n[\nj\n]\n \n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nHighlighting specific lines\n\n\nSpecific lines can be highlighted by passing the line numbers to the \nhl_lines\n\nargument placed right after the language identifier. Line counts start at 1.\n\n\nExample:\n\n\n``` python hl_lines=\n3 4\n\n\n Bubble sort \n\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] \n items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n Bubble sort \n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n\n            \nif\n \nitems\n[\nj\n]\n \n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nSupported languages \nexcerpt\n\n\nCodeHilite uses \nPygments\n, a generic syntax highlighter with support for\nover \n300 languages\n, so the following list of examples is just an excerpt.\n\n\nBash\n\n\n#!/bin/bash\n\n\n\nfor\n OPT in \n$@\n\n\ndo\n\n  \ncase\n \n$OPT\n in\n    \n-f\n \n)\n  \ncanonicalize\n=\n1\n \n;;\n\n    \n-n\n \n)\n  \nswitchlf\n=\n-n\n \n;;\n\n  \nesac\n\n\ndone\n\n\n\n# readlink -f\n\n\nfunction\n __readlink_f \n{\n\n  \ntarget\n=\n$1\n\n  \nwhile\n \ntest\n -n \n$target\n;\n \ndo\n\n    \nfilepath\n=\n$target\n\n    \ncd\n \n`\ndirname \n$filepath\n`\n\n    \ntarget\n=\n`\nreadlink \n$filepath\n`\n\n  \ndone\n\n  /bin/echo \n$switchlf\n \n`\npwd\n -P\n`\n/\n`\nbasename \n$filepath\n`\n\n\n}\n\n\n\nif\n \n[\n ! \n$canonicalize\n \n]\n;\n \nthen\n\n  readlink \n$switchlf\n \n$@\n\n\nelse\n\n  \nfor\n file in \n$@\n\n  \ndo\n\n    \ncase\n \n$file\n in\n      -* \n)\n  \n;;\n\n      *  \n)\n  __readlink_f \n$file\n \n;;\n\n    \nesac\n\n    \ndone\n\n\nfi\n\n\n\nexit\n \n$?\n\n\n\n\n\nC\n\n\nextern\n \nsize_t\n\n\npb_varint_scan\n(\nconst\n \nuint8_t\n \ndata\n[],\n \nsize_t\n \nleft\n)\n \n{\n\n  \nassert\n(\ndata\n \n \nleft\n);\n\n  \nleft\n \n=\n \nleft\n \n \n10\n \n?\n \n10\n \n:\n \nleft\n;\n\n\n\n#ifdef __SSE2__\n\n\n  \n/* Mapping: remaining bytes ==\n bitmask */\n\n  \nstatic\n \nconst\n \nint\n \nmask_map\n[]\n \n=\n \n{\n\n    \n0x0000\n,\n \n0x0001\n,\n \n0x0003\n,\n \n0x0007\n,\n\n    \n0x000F\n,\n \n0x001F\n,\n \n0x003F\n,\n \n0x007F\n,\n\n    \n0x00FF\n,\n \n0x01FF\n,\n \n0x03FF\n\n  \n};\n\n\n  \n/* Load buffer into 128-bit integer and create high-bit mask */\n\n  \n__m128i\n \ntemp\n \n=\n \n_mm_loadu_si128\n((\nconst\n \n__m128i\n \n*\n)\ndata\n);\n\n  \n__m128i\n \nhigh\n \n=\n \n_mm_set1_epi8\n(\n0x80\n);\n\n\n  \n/* Intersect and extract mask with high-bits set */\n\n  \nint\n \nmask\n \n=\n \n_mm_movemask_epi8\n(\n_mm_and_si128\n(\ntemp\n,\n \nhigh\n));\n\n  \nmask\n \n=\n \n(\nmask\n \n \nmask_map\n[\nleft\n])\n \n^\n \nmask_map\n[\nleft\n];\n\n\n  \n/* Count trailing zeroes */\n\n  \nreturn\n \nmask\n \n?\n \n__builtin_ctz\n(\nmask\n)\n \n+\n \n1\n \n:\n \n0\n;\n\n\n\n#else\n\n\n  \n/* Linear scan */\n\n  \nsize_t\n \nsize\n \n=\n \n0\n;\n\n  \nwhile\n \n(\ndata\n[\nsize\n++\n]\n \n \n0x80\n)\n\n    \nif\n \n(\n!--\nleft\n)\n\n      \nreturn\n \n0\n;\n\n  \nreturn\n \nsize\n;\n\n\n\n#endif \n/* __SSE2__ */\n\n\n\n}\n\n\n\n\n\nC++\n\n\nExtension\n::\n\n\nExtension\n(\nconst\n \nDescriptor\n \n*\ndescriptor\n,\n \nconst\n \nDescriptor\n \n*\nscope\n)\n \n:\n\n    \ndescriptor_\n(\ndescriptor\n),\n\n    \nscope_\n(\nscope\n)\n \n{\n\n\n  \n/* Extract full name for signature */\n\n  \nvariables_\n[\nsignature\n]\n \n=\n \ndescriptor_\n-\nfull_name\n();\n\n\n  \n/* Prepare message symbol */\n\n  \nvariables_\n[\nmessage\n]\n \n=\n \nStringReplace\n(\n\n    \nvariables_\n[\nsignature\n],\n \n.\n,\n \n_\n,\n \ntrue\n);\n\n  \nLowerString\n(\n(\nvariables_\n[\nmessage\n]));\n\n\n  \n/* Suffix scope to identifiers, if given */\n\n  \nstring\n \nsuffix\n \n(\n);\n\n  \nif\n \n(\nscope_\n)\n \n{\n\n    \nsuffix\n \n=\n \nscope_\n-\nfull_name\n();\n\n\n    \n/* Check if the base and extension types are in the same package */\n\n    \nif\n \n(\n!\nscope_\n-\nfile\n()\n-\npackage\n().\ncompare\n(\ndescriptor_\n-\nfile\n()\n-\npackage\n()))\n\n      \nsuffix\n \n=\n \nStripPrefixString\n(\nsuffix\n,\n\n        \nscope_\n-\nfile\n()\n-\npackage\n()\n \n+\n \n.\n);\n\n\n    \n/* Append to signature */\n\n    \nvariables_\n[\nsignature\n]\n \n+=\n \n.[\n \n+\n \nsuffix\n \n+\n]\n;\n\n    \nsuffix\n \n=\n \n_\n \n+\n \nsuffix\n;\n\n  \n}\n\n\n  \n/* Prepare extension symbol */\n\n  \nvariables_\n[\nextension\n]\n \n=\n \nStringReplace\n(\n\n    \nsuffix\n,\n \n.\n,\n \n_\n,\n \ntrue\n);\n\n  \nLowerString\n(\n(\nvariables_\n[\nextension\n]));\n\n\n}\n\n\n\n\n\nC\n\n\npublic\n \nstatic\n \nvoid\n \nSend\n(\n\n    \nSocket\n \nsocket\n,\n \nbyte\n[]\n \nbuffer\n,\n \nint\n \noffset\n,\n \nint\n \nsize\n,\n \nint\n \ntimeout\n)\n \n{\n\n  \nint\n \nstartTickCount\n \n=\n \nEnvironment\n.\nTickCount\n;\n\n  \nint\n \nsent\n \n=\n \n0\n;\n\n  \ndo\n \n{\n\n    \nif\n \n(\nEnvironment\n.\nTickCount\n \n \nstartTickCount\n \n+\n \ntimeout\n)\n\n      \nthrow\n \nnew\n \nException\n(\nTimeout.\n);\n\n    \ntry\n \n{\n\n      \nsent\n \n+=\n \nsocket\n.\nSend\n(\nbuffer\n,\n \noffset\n \n+\n \nsent\n,\n\n        \nsize\n \n-\n \nsent\n,\n \nSocketFlags\n.\nNone\n);\n\n    \n}\n \ncatch\n \n(\nSocketException\n \nex\n)\n \n{\n\n      \nif\n \n(\nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nWouldBlock\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nIOPending\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nNoBufferSpaceAvailable\n)\n \n{\n\n        \n/* Socket buffer is probably full, wait and try again */\n\n        \nThread\n.\nSleep\n(\n30\n);\n\n      \n}\n \nelse\n \n{\n\n        \nthrow\n \nex\n;\n\n      \n}\n\n    \n}\n\n  \n}\n \nwhile\n \n(\nsent\n \n \nsize\n);\n\n\n}\n\n\n\n\n\nClojure\n\n\n(\nclojure-version\n)\n\n\n\n(\ndefn \npartition-when\n\n  \n[\nf\n]\n\n  \n(\nfn \n[\nrf\n]\n\n    \n(\nlet \n[\na\n \n(\njava.util.ArrayList.\n)\n\n          \nfval\n \n(\nvolatile!\n \nfalse\n)]\n\n      \n(\nfn\n\n        \n([]\n \n(\nrf\n))\n\n        \n([\nresult\n]\n\n           \n(\nlet \n[\nresult\n \n(\nif \n(\n.isEmpty\n \na\n)\n\n                          \nresult\n\n                          \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                            \n;; Clear first\n\n                            \n(\n.clear\n \na\n)\n\n                            \n(\nunreduced\n \n(\nrf\n \nresult\n \nv\n))))]\n\n             \n(\nrf\n \nresult\n)))\n\n        \n([\nresult\n \ninput\n]\n\n            \n(\nif-not \n(\nand \n(\nf\n \ninput\n)\n  \n@\nfval\n)\n\n               \n(\ndo\n\n                 \n(\nvreset!\n \nfval\n \ntrue\n)\n\n                 \n(\n.add\n \na\n \ninput\n)\n\n                 \nresult\n)\n\n               \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                 \n(\n.clear\n \na\n)\n\n                 \n(\nlet \n[\nret\n \n(\nrf\n \nresult\n \nv\n)]\n\n                   \n(\nwhen-not \n(\nreduced?\n \nret\n)\n\n                     \n(\n.add\n \na\n \ninput\n))\n\n                   \nret\n))))))))\n\n\n\n\n(\ninto \n[]\n \n(\npartition-when\n\n          \n#\n(\n.startsWith\n \n%\n \n))\n\n          \n[\n1d\n \n33\n \n 1\n \n 2\n \n22\n \n 3\n])\n\n\n\n\n\nDiff\n\n\nIndex: grunt.js\n\n\n===================================================================\n\n\n--- grunt.js    (revision 31200)\n\n\n+++ grunt.js    (working copy)\n\n\n@@ -12,6 +12,7 @@\n\n\n module.exports = function (grunt) {\n\n\n+  console.log(\nhello world\n);\n\n   // Project configuration.\n   grunt.initConfig({\n     lint: {\n\n@@ -19,10 +20,6 @@\n\n         \npackages/services.web/{!(test)/**/,}*.js\n,\n         \npackages/error/**/*.js\n\n       ],\n\n-      scripts: [\n\n\n-        \ngrunt.js\n,\n\n\n-        \ndb/**/*.js\n\n\n-      ],\n\n       browser: [\n         \npackages/web/server.js\n,\n         \npackages/web/server/**/*.js\n,\n\n\n\n\nDocker\n\n\nFROM\n ubuntu\n\n\n\n# Install vnc, xvfb in order to create a \nfake\n display and firefox\n\n\nRUN\n apt-get update \n apt-get install -y x11vnc xvfb firefox\n\nRUN\n mkdir ~/.vnc\n\n\n# Setup a password\n\n\nRUN\n x11vnc -storepasswd \n1234\n ~/.vnc/passwd\n\n\n# Autostart firefox (might not be the best way, but it does the trick)\n\n\nRUN\n bash -c \necho \nfirefox\n \n /.bashrc\n\n\n\nEXPOSE\n 5900\n\n\nCMD\n [\nx11vnc\n, \n-forever\n, \n-usepw\n, \n-create\n]\n\n\n\n\n\nElixir\n\n\nrequire\n \nLogger\n\n\n\ndef\n \naccept\n(\nport\n)\n \ndo\n\n  \n{\n:ok\n,\n \nsocket\n}\n \n=\n \n:gen_tcp\n.\nlisten\n(\nport\n,\n\n                    \n[\n:binary\n,\n \npacket\n:\n \n:line\n,\n \nactive\n:\n \nfalse\n,\n \nreuseaddr\n:\n \ntrue\n])\n\n  \nLogger\n.\ninfo\n \nAccepting connections on port \n#{\nport\n}\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nloop_acceptor\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \nclient\n}\n \n=\n \n:gen_tcp\n.\naccept\n(\nsocket\n)\n\n  \nserve\n(\nclient\n)\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nserve\n(\nsocket\n)\n \ndo\n\n  \nsocket\n\n  \n|\n \nread_line\n()\n\n  \n|\n \nwrite_line\n(\nsocket\n)\n\n\n  \nserve\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nread_line\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \ndata\n}\n \n=\n \n:gen_tcp\n.\nrecv\n(\nsocket\n,\n \n0\n)\n\n  \ndata\n\n\nend\n\n\n\ndefp\n \nwrite_line\n(\nline\n,\n \nsocket\n)\n \ndo\n\n  \n:gen_tcp\n.\nsend\n(\nsocket\n,\n \nline\n)\n\n\nend\n\n\n\n\n\nErlang\n\n\ncircular\n(\nDefs\n)\n \n-\n\n  \n[\n \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n||\n\n    \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n-\n \nDefs\n,\n \nType\n \n==\n \nmsg\n,\n \ncircular\n(\nBase\n,\n \nDefs\n)\n \n].\n\n\n\ncircular\n(\nBase\n,\n \nDefs\n)\n \n-\n\n  \nFields\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nBase\n \n},\n \nDefs\n),\n\n  \ncircular\n(\nDefs\n,\n \nFields\n,\n \n[\nBase\n]).\n\n\n\ncircular\n(_\nDefs\n,\n \n[],\n \n_\nPath\n)\n \n-\n\n  \nfalse\n;\n\n\ncircular\n(\nDefs\n,\n \n[\nField\n \n|\n \nFields\n],\n \nPath\n)\n \n-\n\n  \ncase\n \nField\n#field.type\n \nof\n\n    \n{\n \nmsg\n,\n \nType\n \n}\n \n-\n\n      \ncase\n \nlists\n:\nmember\n(\nType\n,\n \nPath\n)\n \nof\n\n        \nfalse\n \n-\n\n          \nChildren\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nType\n \n},\n \nDefs\n),\n\n          \ncase\n \ncircular\n(\nDefs\n,\n \nChildren\n,\n \n[\nType\n \n|\n \nPath\n])\n \nof\n\n            \nfalse\n \n-\n \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n);\n\n            \ntrue\n  \n-\n \ntrue\n\n          \nend\n;\n\n        \ntrue\n \n-\n\n          \nType\n \n==\n \nlists\n:\nlast\n(\nPath\n)\n \nandalso\n\n            \n(\nlength\n(\nPath\n)\n \n==\n \n1\n \norelse\n \nnot\n \nis_tree\n(\nPath\n))\n\n      \nend\n;\n\n    \n_\n \n-\n\n      \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n)\n\n  \nend\n.\n\n\n\n\n\nF\n\n\n/// Asynchronously download retangles from the server\n\n\n/// and decode the JSON format to F# Rectangle record\n\n\nlet\n \n[\nJs\n]\n \ngetRectangles\n \n()\n \n:\n \nAsync\nRectangle\n[]\n \n=\n \nasync\n \n{\n\n  \nlet\n \nreq\n \n=\n \nXMLHttpRequest\n()\n\n  \nreq\n.\nOpen\n(\nPOST\n,\n \n/get\n,\n \ntrue\n)\n\n  \nlet!\n \nresp\n \n=\n \nreq\n.\nAsyncSend\n()\n\n  \nreturn\n \nJSON\n.\nparse\n(\nresp\n)\n \n}\n\n\n\n/// Repeatedly update rectangles after 0.5 sec\n\n\nlet\n \n[\nJs\n]\n \nupdateLoop\n \n()\n \n=\n \nasync\n \n{\n\n  \nwhile\n \ntrue\n \ndo\n\n    \ndo\n!\n \nAsync\n.\nSleep\n(\n500\n)\n\n    \nlet!\n \nrects\n \n=\n \ngetRectangles\n()\n\n    \ncleanRectangles\n()\n\n    \nrects\n \n|\n \nArray\n.\niter\n \ncreateRectangle\n \n}\n\n\n\n\n\nGo\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \ncounter\n(\nid\n \nint\n,\n \nchannel\n \nchan\n \nint\n,\n \ncloser\n \nbool\n)\n \n{\n\n  \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10000000\n;\n \ni\n++\n \n{\n\n    \nfmt\n.\nPrintln\n(\nprocess\n,\n \nid\n,\n send\n,\n \ni\n)\n\n    \nchannel\n \n-\n \n1\n\n  \n}\n\n  \nif\n \ncloser\n \n{\n \nclose\n(\nchannel\n \n)\n \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n  \nchannel\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n  \ngo\n \ncounter\n(\n1\n,\n \nchannel\n,\n \nfalse\n)\n\n  \ngo\n \ncounter\n(\n2\n,\n \nchannel\n,\n \ntrue\n)\n\n\n  \nx\n \n:=\n \n0\n\n\n  \n// receiving data from channel\n\n  \nfor\n \ni\n \n:=\n \nrange\n \nchannel\n \n{\n\n    \nfmt\n.\nPrintln\n(\nreceiving\n)\n\n    \nx\n \n+=\n \ni\n\n  \n}\n\n\n  \nfmt\n.\nPrintln\n(\nx\n)\n\n\n}\n\n\n\n\n\nHTML\n\n\n!doctype html\n\n\nhtml\n \nclass\n=\nno-js\n \nlang\n=\n\n  \nhead\n\n    \nmeta\n \ncharset\n=\nutf-8\n\n    \nmeta\n \nhttp-equiv\n=\nx-ua-compatible\n \ncontent\n=\nie=edge\n\n    \ntitle\nHTML5 Boilerplate\n/\ntitle\n\n    \nmeta\n \nname\n=\ndescription\n \ncontent\n=\n\n    \nmeta\n \nname\n=\nviewport\n \ncontent\n=\nwidth=device-width, initial-scale=1\n\n\n    \nlink\n \nrel\n=\napple-touch-icon\n \nhref\n=\napple-touch-icon.png\n\n    \nlink\n \nrel\n=\nstylesheet\n \nhref\n=\ncss/normalize.css\n\n    \nlink\n \nrel\n=\nstylesheet\n \nhref\n=\ncss/main.css\n\n    \nscript\n \nsrc\n=\njs/vendor/modernizr-2.8.3.min.js\n/\nscript\n\n  \n/\nhead\n\n  \nbody\n\n    \np\nHello world! This is HTML5 Boilerplate.\n/\np\n\n  \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\nJava\n\n\nimport\n \njava.util.LinkedList\n;\n\n\nimport\n \njava.lang.reflect.Array\n;\n\n\n\npublic\n \nclass\n \nUnsortedHashSet\nE\n \n{\n\n\n  \nprivate\n \nstatic\n \nfinal\n \ndouble\n \nLOAD_FACTOR_LIMIT\n \n=\n \n0.7\n;\n\n\n  \nprivate\n \nint\n \nsize\n;\n\n  \nprivate\n \nLinkedList\nE\n[]\n \ncon\n;\n\n\n  \npublic\n \nUnsortedHashSet\n()\n \n{\n\n    \ncon\n  \n=\n \n(\nLinkedList\nE\n[])(\nnew\n \nLinkedList\n[\n10\n]);\n\n  \n}\n\n\n  \npublic\n \nboolean\n \nadd\n(\nE\n \nobj\n)\n \n{\n\n    \nint\n \noldSize\n \n=\n \nsize\n;\n\n    \nint\n \nindex\n \n=\n \nMath\n.\nabs\n(\nobj\n.\nhashCode\n())\n \n%\n \ncon\n.\nlength\n;\n\n    \nif\n \n(\ncon\n[\nindex\n]\n \n==\n \nnull\n)\n\n      \ncon\n[\nindex\n]\n \n=\n \nnew\n \nLinkedList\nE\n();\n\n    \nif\n \n(!\ncon\n[\nindex\n].\ncontains\n(\nobj\n))\n \n{\n\n      \ncon\n[\nindex\n].\nadd\n(\nobj\n);\n\n      \nsize\n++;\n\n    \n}\n\n    \nif\n \n(\n1.0\n \n*\n \nsize\n \n/\n \ncon\n.\nlength\n \n \nLOAD_FACTOR_LIMIT\n)\n\n      \nresize\n();\n\n    \nreturn\n \noldSize\n \n!=\n \nsize\n;\n\n  \n}\n\n\n  \nprivate\n \nvoid\n \nresize\n()\n \n{\n\n    \nUnsortedHashSet\nE\n \ntemp\n \n=\n \nnew\n \nUnsortedHashSet\nE\n();\n\n    \ntemp\n.\ncon\n \n=\n \n(\nLinkedList\nE\n[])(\nnew\n \nLinkedList\n[\ncon\n.\nlength\n \n*\n \n2\n \n+\n \n1\n]);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n \ncon\n.\nlength\n;\n \ni\n++)\n \n{\n\n      \nif\n \n(\ncon\n[\ni\n]\n \n!=\n \nnull\n)\n\n        \nfor\n \n(\nE\n \ne\n \n:\n \ncon\n[\ni\n])\n\n          \ntemp\n.\nadd\n(\ne\n);\n\n    \n}\n\n    \ncon\n \n=\n \ntemp\n.\ncon\n;\n\n  \n}\n\n\n  \npublic\n \nint\n \nsize\n()\n \n{\n\n    \nreturn\n \nsize\n;\n\n  \n}\n\n\n}\n\n\n\n\n\nJavaScript\n\n\nvar\n \nMath\n \n=\n \nrequire\n(\nlib/math\n);\n\n\n\nvar\n \n_extends\n \n=\n \nfunction\n \n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\nvar\n \ne\n \n=\n \nexports\n.\ne\n \n=\n \n2.71828182846\n;\n\n\nexports\n[\ndefault\n]\n \n=\n \nfunction\n \n(\nx\n)\n \n{\n\n  \nreturn\n \nMath\n.\nexp\n(\nx\n);\n\n\n};\n\n\n\nmodule\n.\nexports\n \n=\n \n_extends\n(\nexports\n[\ndefault\n],\n \nexports\n);\n\n\n\n\n\nJSON\n\n\n{\n\n  \nname\n:\n \nmkdocs-material\n,\n\n  \nversion\n:\n \n0.2.4\n,\n\n  \ndescription\n:\n \nA Material Design theme for MkDocs\n,\n\n  \nhomepage\n:\n \nhttp://squidfunk.github.io/mkdocs-material/\n,\n\n  \nauthors\n:\n \n[\n\n    \nsquidfunk \nmartin.donath@squidfunk.com\n\n  \n],\n\n  \nlicense\n:\n \nMIT\n,\n\n  \nmain\n:\n \nGulpfile.js\n,\n\n  \nscripts\n:\n \n{\n\n    \nstart\n:\n \n./node_modules/.bin/gulp watch --mkdocs\n,\n\n    \nbuild\n:\n \n./node_modules/.bin/gulp build --production\n\n  \n}\n\n  \n...\n\n\n}\n\n\n\n\n\nJulia\n\n\nusing\n \nMXNet\n\n\n\nmlp\n \n=\n \n@mx\n.\nchain\n \nmx\n.\nVariable\n(\n:\ndata\n)\n             \n=\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc1\n,\n \nnum_hidden\n=\n128\n)\n \n=\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu1\n,\n \nact_type\n=:\nrelu\n)\n   \n=\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc2\n,\n \nnum_hidden\n=\n64\n)\n  \n=\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu2\n,\n \nact_type\n=:\nrelu\n)\n   \n=\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc3\n,\n \nnum_hidden\n=\n10\n)\n  \n=\n\n  \nmx\n.\nSoftmaxOutput\n(\nname\n=:\nsoftmax\n)\n\n\n\n# data provider\n\n\nbatch_size\n \n=\n \n100\n\n\ninclude\n(\nPkg\n.\ndir\n(\nMXNet\n,\n \nexamples\n,\n \nmnist\n,\n \nmnist-data.jl\n))\n\n\ntrain_provider\n,\n \neval_provider\n \n=\n \nget_mnist_providers\n(\nbatch_size\n)\n\n\n\n# setup model\n\n\nmodel\n \n=\n \nmx\n.\nFeedForward\n(\nmlp\n,\n \ncontext\n=\nmx\n.\ncpu\n())\n\n\n\n# optimization algorithm\n\n\noptimizer\n \n=\n \nmx\n.\nSGD\n(\nlr\n=\n0.1\n,\n \nmomentum\n=\n0.9\n)\n\n\n\n# fit parameters\n\n\nmx\n.\nfit\n(\nmodel\n,\n \noptimizer\n,\n \ntrain_provider\n,\n \nn_epoch\n=\n20\n,\n \neval_data\n=\neval_provider\n)\n\n\n\n\n\nLua\n\n\nlocal\n \nffi\n \n=\n \nrequire\n(\nffi\n)\n\n\n\nffi\n.\ncdef\n[[\n\n\n  void Sleep(int ms);\n\n\n  int poll(struct pollfd *fds, unsigned long nfds, int timeout);\n\n\n]]\n\n\n\nlocal\n \nsleep\n\n\nif\n \nffi\n.\nos\n \n==\n \nWindows\n \nthen\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\nSleep\n(\ns\n*\n1000\n)\n\n  \nend\n\n\nelse\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\npoll\n(\nnil\n,\n \n0\n,\n \ns\n \n*\n \n1000\n)\n\n  \nend\n\n\nend\n\n\n\nfor\n \ni\n \n=\n \n1\n,\n160\n \ndo\n\n  \nio.write\n(\n.\n);\n \nio.flush\n()\n\n  \nsleep\n(\n0.01\n)\n\n\nend\n\n\nio.write\n(\n\\n\n)\n\n\n\n\n\nMySQL\n\n\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\nLEFT\n \nJOIN\n\n  \nEmployees\n \nAS\n \nManager\n\n\nON\n\n  \nEmployees\n.\nManagerID\n \n=\n \nManager\n.\nEmployeeID\n\n\nWHERE\n\n  \nEmployees\n.\nEmployeeID\n \n=\n \n087652\n;\n\n\n\n\n\nPHP\n\n\n?php\n\n\n\n// src/AppBundle/Controller/LuckyController.php\n\n\nnamespace\n \nAppBundle\\Controller\n;\n\n\n\nuse\n \nSensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route\n;\n\n\nuse\n \nSymfony\\Component\\HttpFoundation\\Response\n;\n\n\n\nclass\n \nLuckyController\n \n{\n\n\n  \n/**\n\n\n   * @Route(\n/lucky/number\n)\n\n\n   */\n\n  \npublic\n \nfunction\n \nnumberAction\n()\n \n{\n\n    \n$number\n \n=\n \nmt_rand\n(\n0\n,\n \n100\n);\n\n\n    \nreturn\n \nnew\n \nResponse\n(\n\n      \nhtml\nbody\nLucky number: \n.\n$number\n.\n/body\n/html\n\n    \n);\n\n  \n}\n\n\n}\n\n\n\n\n\nProtocol Buffers\n\n\nsyntax\n \n=\n \nproto2\n;\n\n\n\npackage\n \ncaffe\n;\n\n\n\n// Specifies the shape (dimensions) of a Blob.\n\n\nmessage\n \nBlobShape\n \n{\n\n  \nrepeated\n \nint64\n \ndim\n \n=\n \n1\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n}\n\n\n\nmessage\n \nBlobProto\n \n{\n\n  \noptional\n \nBlobShape\n \nshape\n \n=\n \n7\n;\n\n  \nrepeated\n \nfloat\n \ndata\n \n=\n \n5\n \n[\npacked\n \n=\n \ntrue\n];\n\n  \nrepeated\n \nfloat\n \ndiff\n \n=\n \n6\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n  \n// 4D dimensions -- deprecated.  Use \nshape\n instead.\n\n  \noptional\n \nint32\n \nnum\n \n=\n \n1\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nchannels\n \n=\n \n2\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nheight\n \n=\n \n3\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nwidth\n \n=\n \n4\n \n[\ndefault\n \n=\n \n0\n];\n\n\n}\n\n\n\n\n\nPython\n\n\n\n\n  A very simple MNIST classifier.\n\n\n  See extensive documentation at\n\n\n  http://tensorflow.org/tutorials/mnist/beginners/index.md\n\n\n\n\nfrom\n \n__future__\n \nimport\n \nabsolute_import\n\n\nfrom\n \n__future__\n \nimport\n \ndivision\n\n\nfrom\n \n__future__\n \nimport\n \nprint_function\n\n\n\n# Import data\n\n\nfrom\n \ntensorflow.examples.tutorials.mnist\n \nimport\n \ninput_data\n\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\nflags\n \n=\n \ntf\n.\napp\n.\nflags\n\n\nFLAGS\n \n=\n \nflags\n.\nFLAGS\n\n\nflags\n.\nDEFINE_string\n(\ndata_dir\n,\n \n/tmp/data/\n,\n \nDirectory for storing data\n)\n\n\n\nmnist\n \n=\n \ninput_data\n.\nread_data_sets\n(\nFLAGS\n.\ndata_dir\n,\n \none_hot\n=\nTrue\n)\n\n\n\nsess\n \n=\n \ntf\n.\nInteractiveSession\n()\n\n\n\n# Create the model\n\n\nx\n \n=\n \ntf\n.\nplaceholder\n(\ntf\n.\nfloat32\n,\n \n[\nNone\n,\n \n784\n])\n\n\nW\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n784\n,\n \n10\n]))\n\n\nb\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n10\n]))\n\n\ny\n \n=\n \ntf\n.\nnn\n.\nsoftmax\n(\ntf\n.\nmatmul\n(\nx\n,\n \nW\n)\n \n+\n \nb\n)\n\n\n\n\n\nRuby\n\n\nrequire\n \nfinity/event\n\n\nrequire\n \nfinity/machine\n\n\nrequire\n \nfinity/state\n\n\nrequire\n \nfinity/transition\n\n\nrequire\n \nfinity/version\n\n\n\nmodule\n \nFinity\n\n  \nclass\n \nInvalidCallback\n \n \nStandardError\n;\n \nend\n\n  \nclass\n \nMissingCallback\n \n \nStandardError\n;\n \nend\n\n  \nclass\n \nInvalidState\n    \n \nStandardError\n;\n \nend\n\n\n  \n# Class methods to be injected into the including class upon inclusion.\n\n  \nmodule\n \nClassMethods\n\n\n    \n# Instantiate a new state machine for the including class by accepting a\n\n    \n# block with state and event (and subsequent transition) definitions.\n\n    \ndef\n \nfinity\n \noptions\n \n=\n \n{},\n \nblock\n\n      \n@finity\n \n||=\n \nMachine\n.\nnew\n \nself\n,\n \noptions\n,\n \nblock\n\n    \nend\n\n\n    \n# Return the names of all registered states.\n\n    \ndef\n \nstates\n\n      \n@finity\n.\nstates\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n\n    \n# Return the names of all registered events.\n\n    \ndef\n \nevents\n\n      \n@finity\n.\nevents\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n  \nend\n\n\n  \n# Inject methods into the including class upon inclusion.\n\n  \ndef\n \nself\n.\nincluded\n \nbase\n\n    \nbase\n.\nextend\n \nClassMethods\n\n  \nend\n\n\nend\n\n\n\n\n\nXML\n\n\n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n\n!DOCTYPE mainTag SYSTEM \nsome.dtd\n [ENTITY % entity]\n\n\n?oxygen RNGSchema=\nsome.rng\n type=\nxml\n?\n\n\nxs:main-Tag\n \nxmlns:xs=\nhttp://www.w3.org/2001/XMLSchema\n\n  \n!-- This is a sample comment --\n\n  \nchildTag\n \nattribute=\nQuoted Value\n \nanother-attribute=\nSingle quoted value\n\n      \na-third-attribute=\n123\n\n    \nwithTextContent\nSome text content\n/withTextContent\n\n    \nwithEntityContent\nSome text content with \nlt;\nentities\ngt;\n and\n      mentioning uint8_t and int32_t\n/withEntityContent\n\n    \notherTag\n \nattribute=\nSingle quoted Value\n/\n\n  \n/childTag\n\n  \n![CDATA[ some CData ]]\n\n\n/main-Tag", 
            "title": "Introduction"
        }, 
        {
            "location": "/#codehilite", 
            "text": "CodeHilite  is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.   Syntax highlighting not working?  Please ensure that  Pygments  is installed. See the next section for\nfurther directions on how to set up Pygments or use the official Docker image  with all dependencies pre-installed.", 
            "title": "CodeHilite"
        }, 
        {
            "location": "/#installation", 
            "text": "CodeHilite parses code blocks and wraps them in  pre  tags. If  Pygments \nis installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:  pip install pygments  To enable CodeHilite, add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   codehilite    Migrating from Material 0.2.x  In 0.2.x the CodeHilite extension was included with codehilite(css_class=code)  which switched the CSS class from .codehilite  to  .code . The current version of the theme doesn't require\nthat and defines styles for the default  .codehilite  class, so the part css_class=code  needs to be removed.", 
            "title": "Installation"
        }, 
        {
            "location": "/#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/#specifying-the-language", 
            "text": "The CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.", 
            "title": "Specifying the language"
        }, 
        {
            "location": "/#via-markdown-syntax-recommended", 
            "text": "In Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.  Example:  ``` python\nimport tensorflow as tf\n```  Result:  import   tensorflow   as   tf", 
            "title": "via Markdown syntax recommended"
        }, 
        {
            "location": "/#via-shebang", 
            "text": "Alternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.  Example:      #!/usr/bin/python\n    import tensorflow as tf  Result:  #!/usr/bin/python  import   tensorflow   as   tf", 
            "title": "via Shebang"
        }, 
        {
            "location": "/#via-three-colons", 
            "text": "If the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.  Example:      :::python\n    import tensorflow as tf  Result:  import   tensorflow   as   tf", 
            "title": "via three colons"
        }, 
        {
            "location": "/#adding-line-numbers", 
            "text": "Line numbers can be added by enabling the  linenums  flag in your  mkdocs.yml :  markdown_extensions : \n   -   codehilite(linenums=true)   Example:  ``` python  Bubble sort  \ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j]   items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```  Result:  1\n2\n3\n4\n5\n6  Bubble sort   def   bubble_sort ( items ): \n     for   i   in   range ( len ( items )): \n         for   j   in   range ( len ( items )   -   1   -   i ): \n             if   items [ j ]     items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]", 
            "title": "Adding line numbers"
        }, 
        {
            "location": "/#highlighting-specific-lines", 
            "text": "Specific lines can be highlighted by passing the line numbers to the  hl_lines \nargument placed right after the language identifier. Line counts start at 1.  Example:  ``` python hl_lines= 3 4   Bubble sort  \ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j]   items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```  Result:  1\n2\n3\n4\n5\n6  Bubble sort   def   bubble_sort ( items ):       for   i   in   range ( len ( items )):           for   j   in   range ( len ( items )   -   1   -   i ):               if   items [ j ]     items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]", 
            "title": "Highlighting specific lines"
        }, 
        {
            "location": "/#supported-languages-excerpt", 
            "text": "CodeHilite uses  Pygments , a generic syntax highlighter with support for\nover  300 languages , so the following list of examples is just an excerpt.", 
            "title": "Supported languages excerpt"
        }, 
        {
            "location": "/#bash", 
            "text": "#!/bin/bash  for  OPT in  $@  do \n   case   $OPT  in\n     -f   )    canonicalize = 1   ;; \n     -n   )    switchlf = -n   ;; \n   esac  done  # readlink -f  function  __readlink_f  { \n   target = $1 \n   while   test  -n  $target ;   do \n     filepath = $target \n     cd   ` dirname  $filepath ` \n     target = ` readlink  $filepath ` \n   done \n  /bin/echo  $switchlf   ` pwd  -P ` / ` basename  $filepath `  }  if   [  !  $canonicalize   ] ;   then \n  readlink  $switchlf   $@  else \n   for  file in  $@ \n   do \n     case   $file  in\n      -*  )    ;; \n      *   )   __readlink_f  $file   ;; \n     esac \n     done  fi  exit   $?", 
            "title": "Bash"
        }, 
        {
            "location": "/#c", 
            "text": "extern   size_t  pb_varint_scan ( const   uint8_t   data [],   size_t   left )   { \n   assert ( data     left ); \n   left   =   left     10   ?   10   :   left ;  #ifdef __SSE2__ \n\n   /* Mapping: remaining bytes ==  bitmask */ \n   static   const   int   mask_map []   =   { \n     0x0000 ,   0x0001 ,   0x0003 ,   0x0007 , \n     0x000F ,   0x001F ,   0x003F ,   0x007F , \n     0x00FF ,   0x01FF ,   0x03FF \n   }; \n\n   /* Load buffer into 128-bit integer and create high-bit mask */ \n   __m128i   temp   =   _mm_loadu_si128 (( const   __m128i   * ) data ); \n   __m128i   high   =   _mm_set1_epi8 ( 0x80 ); \n\n   /* Intersect and extract mask with high-bits set */ \n   int   mask   =   _mm_movemask_epi8 ( _mm_and_si128 ( temp ,   high )); \n   mask   =   ( mask     mask_map [ left ])   ^   mask_map [ left ]; \n\n   /* Count trailing zeroes */ \n   return   mask   ?   __builtin_ctz ( mask )   +   1   :   0 ;  #else \n\n   /* Linear scan */ \n   size_t   size   =   0 ; \n   while   ( data [ size ++ ]     0x80 ) \n     if   ( !-- left ) \n       return   0 ; \n   return   size ;  #endif  /* __SSE2__ */  }", 
            "title": "C"
        }, 
        {
            "location": "/#c_1", 
            "text": "Extension ::  Extension ( const   Descriptor   * descriptor ,   const   Descriptor   * scope )   : \n     descriptor_ ( descriptor ), \n     scope_ ( scope )   { \n\n   /* Extract full name for signature */ \n   variables_ [ signature ]   =   descriptor_ - full_name (); \n\n   /* Prepare message symbol */ \n   variables_ [ message ]   =   StringReplace ( \n     variables_ [ signature ],   . ,   _ ,   true ); \n   LowerString ( ( variables_ [ message ])); \n\n   /* Suffix scope to identifiers, if given */ \n   string   suffix   ( ); \n   if   ( scope_ )   { \n     suffix   =   scope_ - full_name (); \n\n     /* Check if the base and extension types are in the same package */ \n     if   ( ! scope_ - file () - package (). compare ( descriptor_ - file () - package ())) \n       suffix   =   StripPrefixString ( suffix , \n         scope_ - file () - package ()   +   . ); \n\n     /* Append to signature */ \n     variables_ [ signature ]   +=   .[   +   suffix   + ] ; \n     suffix   =   _   +   suffix ; \n   } \n\n   /* Prepare extension symbol */ \n   variables_ [ extension ]   =   StringReplace ( \n     suffix ,   . ,   _ ,   true ); \n   LowerString ( ( variables_ [ extension ]));  }", 
            "title": "C++"
        }, 
        {
            "location": "/#c_2", 
            "text": "public   static   void   Send ( \n     Socket   socket ,   byte []   buffer ,   int   offset ,   int   size ,   int   timeout )   { \n   int   startTickCount   =   Environment . TickCount ; \n   int   sent   =   0 ; \n   do   { \n     if   ( Environment . TickCount     startTickCount   +   timeout ) \n       throw   new   Exception ( Timeout. ); \n     try   { \n       sent   +=   socket . Send ( buffer ,   offset   +   sent , \n         size   -   sent ,   SocketFlags . None ); \n     }   catch   ( SocketException   ex )   { \n       if   ( ex . SocketErrorCode   ==   SocketError . WouldBlock   || \n           ex . SocketErrorCode   ==   SocketError . IOPending   || \n           ex . SocketErrorCode   ==   SocketError . NoBufferSpaceAvailable )   { \n         /* Socket buffer is probably full, wait and try again */ \n         Thread . Sleep ( 30 ); \n       }   else   { \n         throw   ex ; \n       } \n     } \n   }   while   ( sent     size );  }", 
            "title": "C&#35;"
        }, 
        {
            "location": "/#clojure", 
            "text": "( clojure-version )  ( defn  partition-when \n   [ f ] \n   ( fn  [ rf ] \n     ( let  [ a   ( java.util.ArrayList. ) \n           fval   ( volatile!   false )] \n       ( fn \n         ([]   ( rf )) \n         ([ result ] \n            ( let  [ result   ( if  ( .isEmpty   a ) \n                           result \n                           ( let  [ v   ( vec   ( .toArray   a ))] \n                             ;; Clear first \n                             ( .clear   a ) \n                             ( unreduced   ( rf   result   v ))))] \n              ( rf   result ))) \n         ([ result   input ] \n             ( if-not  ( and  ( f   input )    @ fval ) \n                ( do \n                  ( vreset!   fval   true ) \n                  ( .add   a   input ) \n                  result ) \n                ( let  [ v   ( vec   ( .toArray   a ))] \n                  ( .clear   a ) \n                  ( let  [ ret   ( rf   result   v )] \n                    ( when-not  ( reduced?   ret ) \n                      ( .add   a   input )) \n                    ret ))))))))  ( into  []   ( partition-when \n           # ( .startsWith   %   )) \n           [ 1d   33    1    2   22    3 ])", 
            "title": "Clojure"
        }, 
        {
            "location": "/#diff", 
            "text": "Index: grunt.js  ===================================================================  --- grunt.js    (revision 31200)  +++ grunt.js    (working copy)  @@ -12,6 +12,7 @@ \n\n module.exports = function (grunt) { +  console.log( hello world ); \n   // Project configuration.\n   grunt.initConfig({\n     lint: { @@ -19,10 +20,6 @@ \n          packages/services.web/{!(test)/**/,}*.js ,\n          packages/error/**/*.js \n       ], -      scripts: [  -         grunt.js ,  -         db/**/*.js  -      ], \n       browser: [\n          packages/web/server.js ,\n          packages/web/server/**/*.js ,", 
            "title": "Diff"
        }, 
        {
            "location": "/#docker", 
            "text": "FROM  ubuntu  # Install vnc, xvfb in order to create a  fake  display and firefox  RUN  apt-get update   apt-get install -y x11vnc xvfb firefox RUN  mkdir ~/.vnc # Setup a password  RUN  x11vnc -storepasswd  1234  ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick)  RUN  bash -c  echo  firefox    /.bashrc  EXPOSE  5900  CMD  [ x11vnc ,  -forever ,  -usepw ,  -create ]", 
            "title": "Docker"
        }, 
        {
            "location": "/#elixir", 
            "text": "require   Logger  def   accept ( port )   do \n   { :ok ,   socket }   =   :gen_tcp . listen ( port , \n                     [ :binary ,   packet :   :line ,   active :   false ,   reuseaddr :   true ]) \n   Logger . info   Accepting connections on port  #{ port } \n   loop_acceptor ( socket )  end  defp   loop_acceptor ( socket )   do \n   { :ok ,   client }   =   :gen_tcp . accept ( socket ) \n   serve ( client ) \n   loop_acceptor ( socket )  end  defp   serve ( socket )   do \n   socket \n   |   read_line () \n   |   write_line ( socket ) \n\n   serve ( socket )  end  defp   read_line ( socket )   do \n   { :ok ,   data }   =   :gen_tcp . recv ( socket ,   0 ) \n   data  end  defp   write_line ( line ,   socket )   do \n   :gen_tcp . send ( socket ,   line )  end", 
            "title": "Elixir"
        }, 
        {
            "location": "/#erlang", 
            "text": "circular ( Defs )   - \n   [   {   {   Type ,   Base   },   Fields   }   || \n     {   {   Type ,   Base   },   Fields   }   -   Defs ,   Type   ==   msg ,   circular ( Base ,   Defs )   ].  circular ( Base ,   Defs )   - \n   Fields   =   proplists : get_value ({   msg ,   Base   },   Defs ), \n   circular ( Defs ,   Fields ,   [ Base ]).  circular (_ Defs ,   [],   _ Path )   - \n   false ;  circular ( Defs ,   [ Field   |   Fields ],   Path )   - \n   case   Field #field.type   of \n     {   msg ,   Type   }   - \n       case   lists : member ( Type ,   Path )   of \n         false   - \n           Children   =   proplists : get_value ({   msg ,   Type   },   Defs ), \n           case   circular ( Defs ,   Children ,   [ Type   |   Path ])   of \n             false   -   circular ( Defs ,   Fields ,   Path ); \n             true    -   true \n           end ; \n         true   - \n           Type   ==   lists : last ( Path )   andalso \n             ( length ( Path )   ==   1   orelse   not   is_tree ( Path )) \n       end ; \n     _   - \n       circular ( Defs ,   Fields ,   Path ) \n   end .", 
            "title": "Erlang"
        }, 
        {
            "location": "/#f", 
            "text": "/// Asynchronously download retangles from the server  /// and decode the JSON format to F# Rectangle record  let   [ Js ]   getRectangles   ()   :   Async Rectangle []   =   async   { \n   let   req   =   XMLHttpRequest () \n   req . Open ( POST ,   /get ,   true ) \n   let!   resp   =   req . AsyncSend () \n   return   JSON . parse ( resp )   }  /// Repeatedly update rectangles after 0.5 sec  let   [ Js ]   updateLoop   ()   =   async   { \n   while   true   do \n     do !   Async . Sleep ( 500 ) \n     let!   rects   =   getRectangles () \n     cleanRectangles () \n     rects   |   Array . iter   createRectangle   }", 
            "title": "F&#35;"
        }, 
        {
            "location": "/#go", 
            "text": "package   main  import   fmt  func   counter ( id   int ,   channel   chan   int ,   closer   bool )   { \n   for   i   :=   0 ;   i     10000000 ;   i ++   { \n     fmt . Println ( process ,   id ,  send ,   i ) \n     channel   -   1 \n   } \n   if   closer   {   close ( channel   )   }  }  func   main ()   { \n   channel   :=   make ( chan   int ) \n   go   counter ( 1 ,   channel ,   false ) \n   go   counter ( 2 ,   channel ,   true ) \n\n   x   :=   0 \n\n   // receiving data from channel \n   for   i   :=   range   channel   { \n     fmt . Println ( receiving ) \n     x   +=   i \n   } \n\n   fmt . Println ( x )  }", 
            "title": "Go"
        }, 
        {
            "location": "/#html", 
            "text": "!doctype html  html   class = no-js   lang = \n   head \n     meta   charset = utf-8 \n     meta   http-equiv = x-ua-compatible   content = ie=edge \n     title HTML5 Boilerplate / title \n     meta   name = description   content = \n     meta   name = viewport   content = width=device-width, initial-scale=1 \n\n     link   rel = apple-touch-icon   href = apple-touch-icon.png \n     link   rel = stylesheet   href = css/normalize.css \n     link   rel = stylesheet   href = css/main.css \n     script   src = js/vendor/modernizr-2.8.3.min.js / script \n   / head \n   body \n     p Hello world! This is HTML5 Boilerplate. / p \n   / body  / html", 
            "title": "HTML"
        }, 
        {
            "location": "/#java", 
            "text": "import   java.util.LinkedList ;  import   java.lang.reflect.Array ;  public   class   UnsortedHashSet E   { \n\n   private   static   final   double   LOAD_FACTOR_LIMIT   =   0.7 ; \n\n   private   int   size ; \n   private   LinkedList E []   con ; \n\n   public   UnsortedHashSet ()   { \n     con    =   ( LinkedList E [])( new   LinkedList [ 10 ]); \n   } \n\n   public   boolean   add ( E   obj )   { \n     int   oldSize   =   size ; \n     int   index   =   Math . abs ( obj . hashCode ())   %   con . length ; \n     if   ( con [ index ]   ==   null ) \n       con [ index ]   =   new   LinkedList E (); \n     if   (! con [ index ]. contains ( obj ))   { \n       con [ index ]. add ( obj ); \n       size ++; \n     } \n     if   ( 1.0   *   size   /   con . length     LOAD_FACTOR_LIMIT ) \n       resize (); \n     return   oldSize   !=   size ; \n   } \n\n   private   void   resize ()   { \n     UnsortedHashSet E   temp   =   new   UnsortedHashSet E (); \n     temp . con   =   ( LinkedList E [])( new   LinkedList [ con . length   *   2   +   1 ]); \n     for   ( int   i   =   0 ;   i     con . length ;   i ++)   { \n       if   ( con [ i ]   !=   null ) \n         for   ( E   e   :   con [ i ]) \n           temp . add ( e ); \n     } \n     con   =   temp . con ; \n   } \n\n   public   int   size ()   { \n     return   size ; \n   }  }", 
            "title": "Java"
        }, 
        {
            "location": "/#javascript", 
            "text": "var   Math   =   require ( lib/math );  var   _extends   =   function   ( target )   { \n   for   ( var   i   =   1 ;   i     arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   } \n\n   return   target ;  };  var   e   =   exports . e   =   2.71828182846 ;  exports [ default ]   =   function   ( x )   { \n   return   Math . exp ( x );  };  module . exports   =   _extends ( exports [ default ],   exports );", 
            "title": "JavaScript"
        }, 
        {
            "location": "/#json", 
            "text": "{ \n   name :   mkdocs-material , \n   version :   0.2.4 , \n   description :   A Material Design theme for MkDocs , \n   homepage :   http://squidfunk.github.io/mkdocs-material/ , \n   authors :   [ \n     squidfunk  martin.donath@squidfunk.com \n   ], \n   license :   MIT , \n   main :   Gulpfile.js , \n   scripts :   { \n     start :   ./node_modules/.bin/gulp watch --mkdocs , \n     build :   ./node_modules/.bin/gulp build --production \n   } \n   ...  }", 
            "title": "JSON"
        }, 
        {
            "location": "/#julia", 
            "text": "using   MXNet  mlp   =   @mx . chain   mx . Variable ( : data )               = \n   mx . FullyConnected ( name =: fc1 ,   num_hidden = 128 )   = \n   mx . Activation ( name =: relu1 ,   act_type =: relu )     = \n   mx . FullyConnected ( name =: fc2 ,   num_hidden = 64 )    = \n   mx . Activation ( name =: relu2 ,   act_type =: relu )     = \n   mx . FullyConnected ( name =: fc3 ,   num_hidden = 10 )    = \n   mx . SoftmaxOutput ( name =: softmax )  # data provider  batch_size   =   100  include ( Pkg . dir ( MXNet ,   examples ,   mnist ,   mnist-data.jl ))  train_provider ,   eval_provider   =   get_mnist_providers ( batch_size )  # setup model  model   =   mx . FeedForward ( mlp ,   context = mx . cpu ())  # optimization algorithm  optimizer   =   mx . SGD ( lr = 0.1 ,   momentum = 0.9 )  # fit parameters  mx . fit ( model ,   optimizer ,   train_provider ,   n_epoch = 20 ,   eval_data = eval_provider )", 
            "title": "Julia"
        }, 
        {
            "location": "/#lua", 
            "text": "local   ffi   =   require ( ffi )  ffi . cdef [[    void Sleep(int ms);    int poll(struct pollfd *fds, unsigned long nfds, int timeout);  ]]  local   sleep  if   ffi . os   ==   Windows   then \n   function   sleep ( s ) \n     ffi . C . Sleep ( s * 1000 ) \n   end  else \n   function   sleep ( s ) \n     ffi . C . poll ( nil ,   0 ,   s   *   1000 ) \n   end  end  for   i   =   1 , 160   do \n   io.write ( . );   io.flush () \n   sleep ( 0.01 )  end  io.write ( \\n )", 
            "title": "Lua"
        }, 
        {
            "location": "/#mysql", 
            "text": "SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees  LEFT   JOIN \n   Employees   AS   Manager  ON \n   Employees . ManagerID   =   Manager . EmployeeID  WHERE \n   Employees . EmployeeID   =   087652 ;", 
            "title": "MySQL"
        }, 
        {
            "location": "/#php", 
            "text": "?php  // src/AppBundle/Controller/LuckyController.php  namespace   AppBundle\\Controller ;  use   Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ;  use   Symfony\\Component\\HttpFoundation\\Response ;  class   LuckyController   { \n\n   /**     * @Route( /lucky/number )     */ \n   public   function   numberAction ()   { \n     $number   =   mt_rand ( 0 ,   100 ); \n\n     return   new   Response ( \n       html body Lucky number:  . $number . /body /html \n     ); \n   }  }", 
            "title": "PHP"
        }, 
        {
            "location": "/#protocol-buffers", 
            "text": "syntax   =   proto2 ;  package   caffe ;  // Specifies the shape (dimensions) of a Blob.  message   BlobShape   { \n   repeated   int64   dim   =   1   [ packed   =   true ];  }  message   BlobProto   { \n   optional   BlobShape   shape   =   7 ; \n   repeated   float   data   =   5   [ packed   =   true ]; \n   repeated   float   diff   =   6   [ packed   =   true ]; \n\n   // 4D dimensions -- deprecated.  Use  shape  instead. \n   optional   int32   num   =   1   [ default   =   0 ]; \n   optional   int32   channels   =   2   [ default   =   0 ]; \n   optional   int32   height   =   3   [ default   =   0 ]; \n   optional   int32   width   =   4   [ default   =   0 ];  }", 
            "title": "Protocol Buffers"
        }, 
        {
            "location": "/#python", 
            "text": "A very simple MNIST classifier.    See extensive documentation at    http://tensorflow.org/tutorials/mnist/beginners/index.md   from   __future__   import   absolute_import  from   __future__   import   division  from   __future__   import   print_function  # Import data  from   tensorflow.examples.tutorials.mnist   import   input_data  import   tensorflow   as   tf  flags   =   tf . app . flags  FLAGS   =   flags . FLAGS  flags . DEFINE_string ( data_dir ,   /tmp/data/ ,   Directory for storing data )  mnist   =   input_data . read_data_sets ( FLAGS . data_dir ,   one_hot = True )  sess   =   tf . InteractiveSession ()  # Create the model  x   =   tf . placeholder ( tf . float32 ,   [ None ,   784 ])  W   =   tf . Variable ( tf . zeros ([ 784 ,   10 ]))  b   =   tf . Variable ( tf . zeros ([ 10 ]))  y   =   tf . nn . softmax ( tf . matmul ( x ,   W )   +   b )", 
            "title": "Python"
        }, 
        {
            "location": "/#ruby", 
            "text": "require   finity/event  require   finity/machine  require   finity/state  require   finity/transition  require   finity/version  module   Finity \n   class   InvalidCallback     StandardError ;   end \n   class   MissingCallback     StandardError ;   end \n   class   InvalidState        StandardError ;   end \n\n   # Class methods to be injected into the including class upon inclusion. \n   module   ClassMethods \n\n     # Instantiate a new state machine for the including class by accepting a \n     # block with state and event (and subsequent transition) definitions. \n     def   finity   options   =   {},   block \n       @finity   ||=   Machine . new   self ,   options ,   block \n     end \n\n     # Return the names of all registered states. \n     def   states \n       @finity . states . map   {   | name ,   _ |   name   } \n     end \n\n     # Return the names of all registered events. \n     def   events \n       @finity . events . map   {   | name ,   _ |   name   } \n     end \n   end \n\n   # Inject methods into the including class upon inclusion. \n   def   self . included   base \n     base . extend   ClassMethods \n   end  end", 
            "title": "Ruby"
        }, 
        {
            "location": "/#xml", 
            "text": "?xml version= 1.0  encoding= UTF-8 ?  !DOCTYPE mainTag SYSTEM  some.dtd  [ENTITY % entity]  ?oxygen RNGSchema= some.rng  type= xml ?  xs:main-Tag   xmlns:xs= http://www.w3.org/2001/XMLSchema \n   !-- This is a sample comment -- \n   childTag   attribute= Quoted Value   another-attribute= Single quoted value \n       a-third-attribute= 123 \n     withTextContent Some text content /withTextContent \n     withEntityContent Some text content with  lt; entities gt;  and\n      mentioning uint8_t and int32_t /withEntityContent \n     otherTag   attribute= Single quoted Value / \n   /childTag \n   ![CDATA[ some CData ]]  /main-Tag", 
            "title": "XML"
        }, 
        {
            "location": "/architecture/", 
            "text": "Miserum donec clamant et fecerat agmina sit\n\n\nLoco metu tractoque\n\n\nLorem markdownum\n, invocat nemo alternaque, inplicuit, nata. In nata vestigia\nvidetur. Quantum tutela iussam te ille Iulo nec repandus deus inveniesque pisce\nfraterno, terra sed, est. Tenetur quod animal longumque Iovis turbae: fata\niuvenem dea \nflavescit\n. Abit lacertis,\nubi visa non infestae in tempore caeco, et prosit procul \ncaput\n, miseram\nAquilonem carmine tangeret.\n\n\nvar drag_youtube = boot_https(post_icmp, newlineVariableWorkstation /\n        lagLink);\ntext_denial_debug += stick_click.record.boot_post(cplDevelopmentCluster,\n        runtime, offline(ribbon_oop_noc, file_mouse_system)) - file;\ncore_it(1, ccd_zif.yobibyte.pretestNat(tebibyteWebFlatbed,\n        yahoo_expression_program, p) * client, dockingFontEide + repeater);\n\n\n\n\n\nSponte genuumque eras: animum serpens eripiunt avido forsitan tamen hic\ncorpusque tectus ipsum Iunone ocius quae moenia! Auras nullo, fetibus\n\nnovissima populorum\n gemino in \niuvenem\n labori, nam. Exiliis lecto, nec?\n\n\nRestant non et ille eandem movebatur mendacia\n\n\nAer est femina prodere si nutrit nurusque moenia \nsuperabat\n quoque facias,\norbes esset Perseu Dauni templa expertus! Campos ita artus census in vulnera\nsubit \nest\n: solio \ncruentior\n inque auditaque agros,\ngestu morte. Ipsum undas casu \nrursus\n, lacrimavit dextras esset fama dies?\n\n\nQuas quas magna \nfrustra genetrix\n vocatur fatus divino\nipsaque. Iuro tibi Cercopum natalis perspicuas, parari sine subito et Ethemon\n\nsaliunt\n, tuos cingens de.\n\n\nPer quam sibi super\n\n\nIn pictis carpere fato illis ter decorem tertia fecisse fulvos prolesque. Inquit\n\nsaxa\n narrat hac diversa figuris conata; est tori acuto fuit verba. Est \nvideri\nme\n fugit petit flammiferis et orbem, et est resolvit omnia!\n\n\nserviceVdslBus -= rtNativeDimm + -2 - laptopLampMedia;\nsoftware_lte_ugc += 299596;\nbitmap_dynamic_alpha.and = icann;\n\n\n\n\n\nMihi si\n: iste fraudem quater, coleretur nisi illa suberant tinxit! Iratus\nCinyreia Pyreneus matrem Calydonius pudorem; sed vacuae ensem utque\nfatiiuvenescere superest; accede hominum tamen. Certamine capit coronae\nperfidiae materna ultima cupidine capitum lacertis stabat patriaque intenta.\n\n\nMalo magna invergens iaceret annua, vita \nlocus iussorum solida\n et iunxisse\nluctibus capillis. Sisti raptos hominumque quia! \nPer et\npallebant\n templum, sanguis Trachinia semina\nmesses ipsoque frigidus domos. Efferor nam illam laniavit fraternos ad stridore\nsuo spirantis letique, et.", 
            "title": "Architectural Design"
        }, 
        {
            "location": "/architecture/#miserum-donec-clamant-et-fecerat-agmina-sit", 
            "text": "", 
            "title": "Miserum donec clamant et fecerat agmina sit"
        }, 
        {
            "location": "/architecture/#loco-metu-tractoque", 
            "text": "Lorem markdownum , invocat nemo alternaque, inplicuit, nata. In nata vestigia\nvidetur. Quantum tutela iussam te ille Iulo nec repandus deus inveniesque pisce\nfraterno, terra sed, est. Tenetur quod animal longumque Iovis turbae: fata\niuvenem dea  flavescit . Abit lacertis,\nubi visa non infestae in tempore caeco, et prosit procul  caput , miseram\nAquilonem carmine tangeret.  var drag_youtube = boot_https(post_icmp, newlineVariableWorkstation /\n        lagLink);\ntext_denial_debug += stick_click.record.boot_post(cplDevelopmentCluster,\n        runtime, offline(ribbon_oop_noc, file_mouse_system)) - file;\ncore_it(1, ccd_zif.yobibyte.pretestNat(tebibyteWebFlatbed,\n        yahoo_expression_program, p) * client, dockingFontEide + repeater);  Sponte genuumque eras: animum serpens eripiunt avido forsitan tamen hic\ncorpusque tectus ipsum Iunone ocius quae moenia! Auras nullo, fetibus novissima populorum  gemino in  iuvenem  labori, nam. Exiliis lecto, nec?", 
            "title": "Loco metu tractoque"
        }, 
        {
            "location": "/architecture/#restant-non-et-ille-eandem-movebatur-mendacia", 
            "text": "Aer est femina prodere si nutrit nurusque moenia  superabat  quoque facias,\norbes esset Perseu Dauni templa expertus! Campos ita artus census in vulnera\nsubit  est : solio  cruentior  inque auditaque agros,\ngestu morte. Ipsum undas casu  rursus , lacrimavit dextras esset fama dies?  Quas quas magna  frustra genetrix  vocatur fatus divino\nipsaque. Iuro tibi Cercopum natalis perspicuas, parari sine subito et Ethemon saliunt , tuos cingens de.", 
            "title": "Restant non et ille eandem movebatur mendacia"
        }, 
        {
            "location": "/architecture/#per-quam-sibi-super", 
            "text": "In pictis carpere fato illis ter decorem tertia fecisse fulvos prolesque. Inquit saxa  narrat hac diversa figuris conata; est tori acuto fuit verba. Est  videri\nme  fugit petit flammiferis et orbem, et est resolvit omnia!  serviceVdslBus -= rtNativeDimm + -2 - laptopLampMedia;\nsoftware_lte_ugc += 299596;\nbitmap_dynamic_alpha.and = icann;  Mihi si : iste fraudem quater, coleretur nisi illa suberant tinxit! Iratus\nCinyreia Pyreneus matrem Calydonius pudorem; sed vacuae ensem utque\nfatiiuvenescere superest; accede hominum tamen. Certamine capit coronae\nperfidiae materna ultima cupidine capitum lacertis stabat patriaque intenta.  Malo magna invergens iaceret annua, vita  locus iussorum solida  et iunxisse\nluctibus capillis. Sisti raptos hominumque quia!  Per et\npallebant  templum, sanguis Trachinia semina\nmesses ipsoque frigidus domos. Efferor nam illam laniavit fraternos ad stridore\nsuo spirantis letique, et.", 
            "title": "Per quam sibi super"
        }, 
        {
            "location": "/steps/selection/", 
            "text": "Customer / Applicant Selection", 
            "title": "Customer/Applicant Selection"
        }, 
        {
            "location": "/steps/selection/#customer-applicant-selection", 
            "text": "", 
            "title": "Customer / Applicant Selection"
        }, 
        {
            "location": "/steps/approvals/", 
            "text": "Business Approvals", 
            "title": "Approvals"
        }, 
        {
            "location": "/steps/approvals/#business-approvals", 
            "text": "", 
            "title": "Business Approvals"
        }, 
        {
            "location": "/steps/execution/", 
            "text": "Destruction Execution\n\n\nSo we have selected the customers and applicants that should be deleted according to their retention, completed all flows and approvals and finally we are ready to delete the customers.\n\n\nThe approved list is inserted to a BCH table. For every row in the BCH table we check the definition table and get the list of tables to be deleted according to entity and retention.\n\n\nSuppose that it is a Customer and it is in our radar due to a 10Y retention.\n\n\nOne example definition that matches these conditions would be the following :\n\n\n\n\n\n\n\n\nRETENTION\n\n\nENTITY\n\n\nTABLENAME\n\n\nCOLUMNS\n\n\nSELECTQUERY\n\n\nDELETEQUERY\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10Y\n\n\nCUST\n\n\nMMS.MUSTERI_ADDRESS\n\n\nLOCATIONNAME,ADRESSATIR1,ADRESSATIR2\n\n\nQE_DD_SELECT_ADDRESS\n\n\nQE_DD_DELETE_ADDRESS\n\n\n\n\n\n\n\n\n\n\n\n\nWe will start by executing the select query with providing the customeroid that is coming from BCH table. This query is the select version of delete query.\nIt will be used to backup the columns that are subject to deletion.\n\n\n QE_DD_SELECT_ADDRESS \n\n\nSELECT\n\n  \nOID\n,\n\n  \nMA\n.\nLOCATIONNAME\n,\n\n  \nMA\n.\nADRESSATIR1\n,\n\n  \nMA\n.\nADRESSATIR2\n\n\nFROM\n\n  \nMMS\n.\nMUSTERI_ADRES\n \nMA\n\n\nWHERE\n\n   \nMA\n.\nMUSTERIOID\n \n=\n \n?\n;\n\n\n\n\n\nSuppose our select query returned 2 rows . With the information coming from BCH table and the result set of above query we will fill our log and backup table and execute the delete query.\n\n\nsql\nUPDATE MMS.MUSTERI_ADRES MA\n   SET\n   MA.LASTUPDATED = GETLASTUPDATED,\n       MA.LOCATIONNAME = NULL,\n       MA.CAREOF = NULL,\n       MA.FLAT = NULL,\n       MA.BUILDING = NULL,\n       MA.HOUSE = NULL,\n       MA.POSTAKODU = NULL,\n       MA.ADRESSATIR1 = NULL,\n       MA.ADRESSATIR2 = NULL,\n       MA.ADRESSATIR3 = NULL\n WHERE\n    MA.MUSTERIOID = ?\n    AND exists (select null from MMS.DD_DELETION_LIST l\n                   where l.CUSTOMEROID = MA.CUSTOMEROID\n                     AND l.status = \nAPPROVED\n);\n\n\nIt will be similar two the following:", 
            "title": "Destruction Execution"
        }, 
        {
            "location": "/steps/execution/#destruction-execution", 
            "text": "So we have selected the customers and applicants that should be deleted according to their retention, completed all flows and approvals and finally we are ready to delete the customers.  The approved list is inserted to a BCH table. For every row in the BCH table we check the definition table and get the list of tables to be deleted according to entity and retention.  Suppose that it is a Customer and it is in our radar due to a 10Y retention.  One example definition that matches these conditions would be the following :     RETENTION  ENTITY  TABLENAME  COLUMNS  SELECTQUERY  DELETEQUERY        10Y  CUST  MMS.MUSTERI_ADDRESS  LOCATIONNAME,ADRESSATIR1,ADRESSATIR2  QE_DD_SELECT_ADDRESS  QE_DD_DELETE_ADDRESS       We will start by executing the select query with providing the customeroid that is coming from BCH table. This query is the select version of delete query.\nIt will be used to backup the columns that are subject to deletion.   QE_DD_SELECT_ADDRESS   SELECT \n   OID , \n   MA . LOCATIONNAME , \n   MA . ADRESSATIR1 , \n   MA . ADRESSATIR2  FROM \n   MMS . MUSTERI_ADRES   MA  WHERE \n    MA . MUSTERIOID   =   ? ;   Suppose our select query returned 2 rows . With the information coming from BCH table and the result set of above query we will fill our log and backup table and execute the delete query.  sql\nUPDATE MMS.MUSTERI_ADRES MA\n   SET\n   MA.LASTUPDATED = GETLASTUPDATED,\n       MA.LOCATIONNAME = NULL,\n       MA.CAREOF = NULL,\n       MA.FLAT = NULL,\n       MA.BUILDING = NULL,\n       MA.HOUSE = NULL,\n       MA.POSTAKODU = NULL,\n       MA.ADRESSATIR1 = NULL,\n       MA.ADRESSATIR2 = NULL,\n       MA.ADRESSATIR3 = NULL\n WHERE\n    MA.MUSTERIOID = ?\n    AND exists (select null from MMS.DD_DELETION_LIST l\n                   where l.CUSTOMEROID = MA.CUSTOMEROID\n                     AND l.status =  APPROVED );  It will be similar two the following:", 
            "title": "Destruction Execution"
        }, 
        {
            "location": "/database/graph/", 
            "text": "Database Graph", 
            "title": "Database Graph"
        }, 
        {
            "location": "/database/graph/#database-graph", 
            "text": "", 
            "title": "Database Graph"
        }, 
        {
            "location": "/database/tables/", 
            "text": "Tables\n\n\nException Customer Module\n\n\nThis is a simple module that has one table. This table is used to keep\nthe customers/applicants that are excluded from deletion.\n\n\nBusiness registers their customers/applicants with their reason to keep. They should also provide a date that this exclusion is valid. After that date the first deletion procedure will pick this customer/applicant for deletion. \n\n\nModule Tables\n\n\nMain Table\n\n\n MMS.DD_EXCEPTION_CUSTOMERS \n\n\n\n\n\n\n\n\nCOLUMN\n\n\nDATATYPE\n\n\nINFO\n\n\n\n\n\n\n\n\n\n\nOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nSTATUS\n\n\nNUMBER(1)\n\n\n\n\n\n\n\n\nLASTUPDATED\n\n\nNUMBER(15)\n\n\n\n\n\n\n\n\nCUSTOMEROID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nAPLICANTTYPE\n\n\nVARCHAR2(5)\n\n\nLOAN, DEPT\n\n\n\n\n\n\nAPPLICANTOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nREGULARDELETIONDATE\n\n\nNUMBER(8)\n\n\n\n\n\n\n\n\nDELAYREASON\n\n\nVARCHAR2(2)\n\n\n\n\n\n\n\n\nDELAYEDDELETIONDATE\n\n\nNUMBER(8)\n\n\n\n\n\n\n\n\n\n\nPrm Tables\n\n\nDelay Reasons Prm\n\n\n PRM.PRM_CUST_DD_DELAY_REASONS \n\n\n\n\n\n\n\n\nCOLUMN\n\n\nDATATYPE\n\n\n\n\n\n\n\n\n\n\nBASLANGIC\n\n\nCHAR(8)\n\n\n\n\n\n\nBITIS\n\n\nCHAR(8)\n\n\n\n\n\n\nCODE\n\n\nVARCHAR2(2)\n\n\n\n\n\n\nNAME\n\n\nVARCHAR2(100)\n\n\n\n\n\n\n\n\nAvaliable delay reasons\n\n\n\n\nFraud\n\n\nSold Loan\n\n\nCollection Case\n\n\nLegal Case\n\n\nDormant Account\n\n\n\n\nDestruction Execution Module\n\n\n MMS.DD_DEFINITION \n\n\n\n\n\n\n\n\nCOLUMN\n\n\nDATATYPE\n\n\nINFO\n\n\n\n\n\n\n\n\n\n\nOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nSTATUS\n\n\nNUMBER(1)\n\n\n\n\n\n\n\n\nLASTUPDATED\n\n\nNUMBER(15)\n\n\n\n\n\n\n\n\nRETENTION\n\n\nVARCHAR2(5)\n\n\n(2Y  ,10Y)\n\n\n\n\n\n\nENTITY\n\n\nVARCHAR2(5)\n\n\n(CUST , DAP, LAP)\n\n\n\n\n\n\nTABLENAME\n\n\nVARCHAR2(100)\n\n\n\n\n\n\n\n\nCOLUMNS\n\n\nVARCHAR2(1000)\n\n\n(Comma separated)\n\n\n\n\n\n\nSELECTQUERY\n\n\nVARCHAR2(250)\n\n\n\n\n\n\n\n\nDELETEQUERY\n\n\nVARCHAR2(250)\n\n\n\n\n\n\n\n\n\n\n MMS.DD_DELETION_LOG \n\n\n\n\n\n\n\n\nCOLUMN\n\n\nDATATYPE\n\n\nINFO\n\n\n\n\n\n\n\n\n\n\nOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nSTATUS\n\n\nNUMBER(1)\n\n\n\n\n\n\n\n\nLASTUPDATED\n\n\nNUMBER(15)\n\n\n\n\n\n\n\n\nCUSTOMEROID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nAPPLICANTTYPE\n\n\nVARCHAR2(5)\n\n\nLOAN, DEPT\n\n\n\n\n\n\nAPPLICANTOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nRETENTION\n\n\nVARCHAR2(5)\n\n\n\n\n\n\n\n\nTABLENAME\n\n\nVARCHAR2(250)\n\n\n\n\n\n\n\n\nDELETEREFERENCE\n\n\nVARCHAR2(50)\n\n\n\n\n\n\n\n\nDELETIONDATE\n\n\nNUMBER(8)\n\n\n\n\n\n\n\n\nCOLUMNS\n\n\nVARCHAR2(1000)\n\n\n\n\n\n\n\n\nDESTRUCTIONQUERYTEXT1\n\n\nVARCHAR2(4000)\n\n\n\n\n\n\n\n\nDESTRUCTIONQUERYTEXT2\n\n\nVARCHAR2(4000)\n\n\n\n\n\n\n\n\n\n\n MMS.DD_DELETION_LOG_BACKUP \n\n\n\n\n\n\n\n\nCOLUMN\n\n\nDATATYPE\n\n\nINFO\n\n\n\n\n\n\n\n\n\n\nOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nSTATUS\n\n\nNUMBER(1)\n\n\n\n\n\n\n\n\nLASTUPDATED\n\n\nNUMBER(15)\n\n\n\n\n\n\n\n\nDDLOGOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nDELETEDTALEOID\n\n\nNUMBER(16)\n\n\n\n\n\n\n\n\nCOLUMN\n\n\nVARCHAR2(50)\n\n\n\n\n\n\n\n\nVALUE\n\n\nVARCHAR2(4000)", 
            "title": "Tables"
        }, 
        {
            "location": "/database/tables/#tables", 
            "text": "", 
            "title": "Tables"
        }, 
        {
            "location": "/database/tables/#exception-customer-module", 
            "text": "This is a simple module that has one table. This table is used to keep\nthe customers/applicants that are excluded from deletion.  Business registers their customers/applicants with their reason to keep. They should also provide a date that this exclusion is valid. After that date the first deletion procedure will pick this customer/applicant for deletion.", 
            "title": "Exception Customer Module"
        }, 
        {
            "location": "/database/tables/#module-tables", 
            "text": "", 
            "title": "Module Tables"
        }, 
        {
            "location": "/database/tables/#main-table", 
            "text": "MMS.DD_EXCEPTION_CUSTOMERS      COLUMN  DATATYPE  INFO      OID  NUMBER(16)     STATUS  NUMBER(1)     LASTUPDATED  NUMBER(15)     CUSTOMEROID  NUMBER(16)     APLICANTTYPE  VARCHAR2(5)  LOAN, DEPT    APPLICANTOID  NUMBER(16)     REGULARDELETIONDATE  NUMBER(8)     DELAYREASON  VARCHAR2(2)     DELAYEDDELETIONDATE  NUMBER(8)", 
            "title": "Main Table"
        }, 
        {
            "location": "/database/tables/#prm-tables", 
            "text": "", 
            "title": "Prm Tables"
        }, 
        {
            "location": "/database/tables/#delay-reasons-prm", 
            "text": "PRM.PRM_CUST_DD_DELAY_REASONS      COLUMN  DATATYPE      BASLANGIC  CHAR(8)    BITIS  CHAR(8)    CODE  VARCHAR2(2)    NAME  VARCHAR2(100)     Avaliable delay reasons   Fraud  Sold Loan  Collection Case  Legal Case  Dormant Account", 
            "title": "Delay Reasons Prm"
        }, 
        {
            "location": "/database/tables/#destruction-execution-module", 
            "text": "MMS.DD_DEFINITION      COLUMN  DATATYPE  INFO      OID  NUMBER(16)     STATUS  NUMBER(1)     LASTUPDATED  NUMBER(15)     RETENTION  VARCHAR2(5)  (2Y  ,10Y)    ENTITY  VARCHAR2(5)  (CUST , DAP, LAP)    TABLENAME  VARCHAR2(100)     COLUMNS  VARCHAR2(1000)  (Comma separated)    SELECTQUERY  VARCHAR2(250)     DELETEQUERY  VARCHAR2(250)       MMS.DD_DELETION_LOG      COLUMN  DATATYPE  INFO      OID  NUMBER(16)     STATUS  NUMBER(1)     LASTUPDATED  NUMBER(15)     CUSTOMEROID  NUMBER(16)     APPLICANTTYPE  VARCHAR2(5)  LOAN, DEPT    APPLICANTOID  NUMBER(16)     RETENTION  VARCHAR2(5)     TABLENAME  VARCHAR2(250)     DELETEREFERENCE  VARCHAR2(50)     DELETIONDATE  NUMBER(8)     COLUMNS  VARCHAR2(1000)     DESTRUCTIONQUERYTEXT1  VARCHAR2(4000)     DESTRUCTIONQUERYTEXT2  VARCHAR2(4000)       MMS.DD_DELETION_LOG_BACKUP      COLUMN  DATATYPE  INFO      OID  NUMBER(16)     STATUS  NUMBER(1)     LASTUPDATED  NUMBER(15)     DDLOGOID  NUMBER(16)     DELETEDTALEOID  NUMBER(16)     COLUMN  VARCHAR2(50)     VALUE  VARCHAR2(4000)", 
            "title": "Destruction Execution Module"
        }, 
        {
            "location": "/database/queries/", 
            "text": "Queries", 
            "title": "Queries"
        }, 
        {
            "location": "/database/queries/#queries", 
            "text": "", 
            "title": "Queries"
        }, 
        {
            "location": "/definitions/", 
            "text": "Definitions", 
            "title": "Definitions"
        }, 
        {
            "location": "/definitions/#definitions", 
            "text": "", 
            "title": "Definitions"
        }
    ]
}